# Object detection with masking and reference detection
# -----------------------------------------------------
# Uses thresholding for segmentation, with an initial masking step 
# to remove unwanted areas  ("include: true" to ONLY include specific
# areas or "include: false" to EXCLUDE specific areas. If a template 
# for a reference card has been created on the project level, 
# "detect_reference" will attempt to find it in the current image, 
# measure the current px-ratio, and exclude it detection. Also contains 
# optional morphology operations to remove fine structures (see 
# https://docs.opencv.org/master/db/df6/tutorial_erosion_dilatation.html 
# for details), as well as an optional contour-editing step (clean up 
# detected contours and detect again), and default visualization and 
# export steps. Measure shape and texture features (optional).

config_info:
    config_name: pype_config_v1.yaml
    date_created: '2022-11-15 16:14:49'
    date_last_modified: '2022-11-16 09:55:21'
    template_name: detection_mask_ref.yaml
    template_path: C:\Users\Kurs\Documents\GeoMorphPhenopype-main\detection_mask_ref.yaml
processing_steps:
    - preprocessing:
        - create_reference
        - blur:
            kernel_size: 5
        - create_mask:
            ANNOTATION: {type: mask, id: a, edit: false}
            tool: polygon
            include: true
    - segmentation:
        - threshold:
            method: adaptive
            value: 10
            blocksize: 99
            constant: 5

        # - morphology:
            # operation: open
            # shape: cross
            # kernel_size: 5
            # iterations: 3
        # - morphology:
            # operation: close
            # shape: ellipse
            # kernel_size: 5
            # iterations: 3
        - detect_contour:
            ANNOTATION: {type: contour, id: a, edit: overwrite}
            min_diameter: 0
            min_area: 0
    - measurement:
        - compute_shape_features:
            ANNOTATION: {type: shape_features, id: a, edit: overwrite}
        - compute_texture_features:
            ANNOTATION: {type: texture_features, id: a, edit: overwrite}
    - visualization:
        - draw_contour
        - draw_mask
        - draw_reference:
            label: true
    - export:
        - save_canvas
        - save_annotation:
            overwrite: true
        - export_csv
